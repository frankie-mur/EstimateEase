package components

import "fmt"

// RoomPageData data needed for the room page html template
type RoomPageData struct {
	RoomName       string
	DisplayName string
	RoomID         string
}

templ RoomPage(pageData RoomPageData) {
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title>EstimateEase</title>

        <!-- Include DaisyUI CSS -->
        <link href="https://cdn.jsdelivr.net/npm/daisyui@4.4.19/dist/full.min.css" rel="stylesheet" type="text/css" />
        <script src="https://cdn.tailwindcss.com"></script>

        <!-- Include HTMX -->
        <script src="https://unpkg.com/htmx.org@1.9.9/dist/htmx.js"></script>

        <!-- Include HTMX Websocket -->
        <script src="https://unpkg.com/htmx.org/dist/ext/ws.js"></script>
    </head>
   <body class="font-sans">
    @nav()

<div class="flex items-center justify-center">
    <div class="text-center">
        <h1 class="text-lg mb-6">Room Name: { pageData.RoomName } </h1>

        <div hx-ext="ws" ws-connect={ fmt.Sprintf("/ws/room/%v/%v", pageData.RoomID, pageData.DisplayName)}>
            <div id="room-data"></div>
               <div class="flex space-x-4">
                <form id="form1" ws-send class="rounded-md bg-blue-500 p-2">
                    <input type="hidden" id="payload1" name="payload" value="1" readonly/> 
                    <button class="btn text-black" type="submit"> 1 </button>
                </form>
                <form id="form3" ws-send class="rounded-md bg-green-500 p-2">
                    <input type="hidden" id="payload3" name="payload" value="3" readonly/> 
                    <button class="btn text-black" type="submit"> 3 </button>
                </form>
                <form id="form5" ws-send class="rounded-md bg-yellow-500 p-2">
                    <input type="hidden" id="payload5" name="payload" value="5" readonly/> 
                    <button class="btn text-black" type="submit"> 5 </button>
                </form>
                <form id="form8" ws-send class="rounded-md bg-red-500 p-2">
                    <input type="hidden" id="payload8" name="payload" value="8" readonly/> 
                    <button class="btn text-black" type="submit"> 8 </button>
                </form>
            </div>
            <div id="room-count"></div>
        </div>
    </div>
</div>
@footer()
</body>
    </html>
}

type VoteMapData struct {
    SortedNames []string
	VoteMap map[string]string
}

templ VotingGrid(voteMap VoteMapData) {
    <div id="room-data">
	<div class="overflow-x-auto">
     <table class="table table-zebra">
     <!-- head -->
     <thead>
      <tr>
        <th>Name</th>
        <th>Vote</th>
      </tr>
     </thead>
      <tbody>
       for _, name := range voteMap.SortedNames {
        <tr><td> {name} </td><td> {voteMap.VoteMap[name]} </td></tr>
       }
      </tbody>
     </table>
   </div> 
   <div>
   </div>
   </div>
}

templ Stats(numUsers string) {
    <div id="room-count">
        <div class="stats shadow">
            <div class="stat">
                <div class="stat-title">
                    totalUsers
                </div>
                <div class="stat-value">
                    { numUsers }
                </div>
            </div>
        </div>
    </div>
}